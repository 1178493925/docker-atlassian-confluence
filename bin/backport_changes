#!/usr/bin/env bash

set -o errexit

echo "Backporting changes to all branches"

for major_branch in $(git branch --remotes | sed -ne '/origin\/[0-9][0-9]*.[0-9][0-9]*$/p' | sed -ne 's/[ ]*origin.//p' | sort -t. -k 1,1n -k 2,2n); do
	echo "Working on major version $major_branch"

	# get previous major version number
	prev_branch="$(echo $major_branch | awk 'BEGIN { FS="."; OFS="." }; {print $1, $2-1 }')"

	# check if previous major version branch exists
	
	if $(git checkout $prev_branch &> /dev/null); then
		echo "Branch $major_branch has previous branch $prev_branch"
	
	  # rebase major version with previous major version
		git checkout "$major_branch"
		git rebase "$prev_branch"
	fi

	for minor_branch in $(git branch | sed -n "/$major_branch.[0-9][0-9]*/p"); do
		echo "Backporting changes to $branch from $minor_branch"
	  
	  # rebase minor version with major version
	  git checkout "$branch"
	  git rebase "$minor_branch"

	done
	
done

# reset master branch to latest version
git checkout master
git reset --hard "$(git branch --remotes | sed -ne '/origin\/[0-9]/p' | sed -ne 's/[ ]*origin.//p' | sort -t. -k 1,1n -k 2,2n -k 3,3n | tail -1)"
